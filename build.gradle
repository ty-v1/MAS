plugins {
    id 'java'
}

group 'tomida'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven {
        url 'https://jade.tilab.com/maven'
    }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'

    // https://mvnrepository.com/artifact/com.tilab.jade/jade
    compile group: 'com.tilab.jade', name: 'jade', version: '4.5.0'
}

task runGui(type: JavaExec) {
    dependsOn compileJava

    main = "jade.Boot"
    classpath = sourceSets.main.runtimeClasspath
    args('-gui')
}

task runContainer(type: JavaExec) {
    dependsOn compileJava

    onlyIf {
        return project.hasProperty('shops') && project.hasProperty('consumers')
    }

    main "jade.Boot"
    classpath = sourceSets.main.runtimeClasspath

    final StringBuilder builder = new StringBuilder()
    final int numberOfShops = Integer.parseInt((String) project.shops)
    for (int i = 1; i <= numberOfShops; i++) {
        builder.append("shop" + i + ":" + "tomida.agents.ShopAgent;")
        builder.append("spy" + i + ":" + "tomida.agents.SpyAgent;")
    }

    final int numberOfConsumers = Integer.parseInt((String) project.consumers)
    for (int i = 1; i <= numberOfConsumers; i++) {
        builder.append("customer" + i + ":" + "tomida.agents.ConsumerAgent;")
    }

    if (builder.length() > 0) {
        builder.setLength(builder.length() - 1)
    }
    println builder.toString()
//
//    numberOfShopAgents =
//            project.hasProperty('tomida.agents') ? project.get
//
//    if (project.hasProperty('tomida.agents')) {    // "args" というプロパティが渡されていたら
    args('-container', builder.toString())
//    }
}